/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Venue as PrismaVenue } from "@prisma/client";

export class VenueServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.VenueCountArgs, "select">): Promise<number> {
    return this.prisma.venue.count(args);
  }

  async venues(args: Prisma.VenueFindManyArgs): Promise<PrismaVenue[]> {
    return this.prisma.venue.findMany(args);
  }
  async venue(args: Prisma.VenueFindUniqueArgs): Promise<PrismaVenue | null> {
    return this.prisma.venue.findUnique(args);
  }
  async createVenue(args: Prisma.VenueCreateArgs): Promise<PrismaVenue> {
    return this.prisma.venue.create(args);
  }
  async updateVenue(args: Prisma.VenueUpdateArgs): Promise<PrismaVenue> {
    return this.prisma.venue.update(args);
  }
  async deleteVenue(args: Prisma.VenueDeleteArgs): Promise<PrismaVenue> {
    return this.prisma.venue.delete(args);
  }
}
